name: Build

on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            matrix:
                php-versions: ['8.4']
        name: PHP ${{ matrix.php-versions }}

        steps:
            - uses: actions/checkout@v4

            - name: Install Imagick dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y imagemagick librsvg2-bin librsvg2-dev libmagickwand-dev inkscape

            - name: Install PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php-versions }}
                  extensions: json, gd, :imagick
                  ini-values: date.timezone=Europe/Paris
            - name: Check PHP Version
              run: php -v

            - name: Install Imagick PHP extension
              run: |
                  pecl install imagick
                  INI_FILE=$(php --ini | grep 'Loaded Configuration File:' | sed -e 's|.*:\s*||')
                  echo "extension=imagick.so" >> "$INI_FILE"

            - name: Validate composer.json and composer.lock
              run: composer validate --strict

            - name: Install dependencies
              run: composer install --prefer-dist --no-progress

            - name: Run test suite
              run: vendor/bin/phpunit

    analysis:
        name: Analysis
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - name: Set Timezone
              uses: szenius/set-timezone@v1.0
              with:
                  timezoneLinux: "Europe/Paris"

            - name: Install Imagick dependencies
              run: |
                  sudo apt-get update
                  sudo apt-get install -y imagemagick librsvg2-bin librsvg2-dev libmagickwand-dev inkscape

            - name: Install PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.4
                  extensions: json
                  ini-values: date.timezone=Europe/Paris
#
#            - name: Install Infection
#              run: |
#                wget https://github.com/infection/infection/releases/download/0.28.1/infection.phar
#                wget https://github.com/infection/infection/releases/download/0.28.1/infection.phar.asc
#                chmod +x infection.phar
#                gpg --recv-keys C6D76C329EBADE2FB9C458CFC5095986493B4AA0 && gpg --with-fingerprint --verify infection.phar.asc infection.phar

            - name: Validate composer.json and composer.lock
              run: composer validate --strict

            - name: Install dependencies
              run: composer install --prefer-dist --no-progress

            - name: Run type coverage
              run: ./vendor/bin/phpstan
#
#            - name: Run checkstyle
#              run: PHP_CS_FIXER_IGNORE_ENV=1 ./vendor/bin/php-cs-fixer check --diff
#
#            - name: Run Infection
#              run: |
#                ./infection.phar --logger-github

    coverage:
        name: Test coverage
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2

            - name: Set Timezone
              uses: szenius/set-timezone@v1.0
              with:
                  timezoneLinux: "Europe/Paris"

            - name: Install PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: 8.4
                  extensions: json, gd, :imagick
                  ini-values: date.timezone=Europe/Paris

            - name: Install Imagick PHP extension
              run: |
                  pecl install imagick
                  INI_FILE=$(php --ini | grep 'Loaded Configuration File:' | sed -e 's|.*:\s*||')
                  echo "extension=imagick.so" >> "$INI_FILE"

            - name: Install dependencies
              run: composer install --prefer-dist --no-progress

            - name: Run test coverage
              run: ./vendor/bin/phpunit --coverage-clover=coverage.xml

            - name: Upload coverage to Codecov
              uses: codecov/codecov-action@v4
              with:
                  files: coverage.xml
                  token: ${{ secrets.CODECOV_TOKEN }}
